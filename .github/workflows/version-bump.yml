name: Version Bump

on:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  bump:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install uv
        uses: astral-sh/setup-uv@1edb52594c857e2b5b13128931090f0640537287  # v1
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Determine bump type from labels
        id: bump-type
        run: |
          LABELS='${{ toJSON(github.event.pull_request.labels.*.name) }}'
          if echo "$LABELS" | grep -q "bump:major"; then
            echo "type=major" >> $GITHUB_OUTPUT
          elif echo "$LABELS" | grep -q "bump:minor"; then
            echo "type=minor" >> $GITHUB_OUTPUT
          elif echo "$LABELS" | grep -q "bump:patch"; then
            echo "type=patch" >> $GITHUB_OUTPUT
          else
            echo "type=none" >> $GITHUB_OUTPUT
          fi
          echo "Detected bump type: $(cat $GITHUB_OUTPUT)"

      - name: Install dependencies
        if: steps.bump-type.outputs.type != 'none'
        run: uv sync --all-groups

      - name: Bump version
        if: steps.bump-type.outputs.type != 'none'
        run: |
          uv run bump-my-version bump ${{ steps.bump-type.outputs.type }} --allow-dirty
          NEW_VERSION=$(uv run bump-my-version show current_version)
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV

      - name: Push changes and tags
        if: steps.bump-type.outputs.type != 'none'
        run: |
          git push origin main --tags

      - name: Create GitHub Release
        if: steps.bump-type.outputs.type != 'none'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "v${NEW_VERSION}" \
            --title "Release v${NEW_VERSION}" \
            --generate-notes

      - name: Skip message
        if: steps.bump-type.outputs.type == 'none'
        run: |
          echo "No version bump label found (bump:major, bump:minor, or bump:patch)"
          echo "Skipping version bump"
